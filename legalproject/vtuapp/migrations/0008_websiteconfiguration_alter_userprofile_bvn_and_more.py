# Generated by Django 5.1.4 on 2025-01-27 16:10

import colorfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vtuapp', '0007_rename_account_name_userprofile_account_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebsiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_color', colorfield.fields.ColorField(default='#132563', image_field=None, max_length=25, samples=None)),
                ('secondary_color', colorfield.fields.ColorField(blank=True, default=None, help_text='add this color if you want to use color mixure or gradient else leave blank to use single color', image_field=None, max_length=25, null=True, samples=None)),
                ('intro_message', models.TextField(blank=True, default='Refer people to legitdata and earn N500 immediately the person upgrade his/her account to affiliate or topuser', null=True)),
                ('sms_notification_number', models.CharField(blank=True, help_text='Enter the phone number to recieve SMS notifications on', max_length=500, null=True)),
                ('support_phone_number', models.CharField(blank=True, help_text='Customer support phone number ,Whatsapp number  (start with 234)', max_length=13, null=True)),
                ('whatsapp_group_link', models.URLField(blank=True, help_text='Support group link if any', null=True)),
                ('gmail', models.EmailField(blank=True, help_text='Email to get notification on', max_length=254, null=True)),
                ('manual_bank_funding_limit', models.PositiveIntegerField(default=5000, help_text='minimum amount allowed for FUND WITH MANUAL BANK TRANSFER')),
                ('manual_bank_funding_info_message', models.TextField(blank=True, default='Your account will be suspended if you submit without transfer \n Please note that there is a charge of N50 if the amount greater than N9,999.', null=True)),
                ('Paystack_secret_key', models.CharField(blank=True, help_text='Enter your Paystack SCRET API KEY here if you are using Paystack, else leave blank', max_length=500, null=True)),
                ('monnify_API_KEY', models.CharField(blank=True, help_text='Enter your monnify  API_KEY here if you are using monnify  else leave blank', max_length=500, null=True)),
                ('monnify_SECRET_KEY', models.CharField(blank=True, help_text='Enter your monnify Secret Key here if you are using monnify else leave blank', max_length=500, null=True)),
                ('monnify_contract_code', models.CharField(blank=True, help_text='Enter your monnify contarct code here if you are using monnify else leave blank', max_length=500, null=True)),
                ('ringo_email', models.CharField(blank=True, help_text='Enter your RINGO Email here if you are using VTpass else leave blank', max_length=500, null=True)),
                ('ringo_password', models.CharField(blank=True, help_text='Enter your RINGO password here if you are using VTpass else leave blank', max_length=500, null=True)),
                ('vtpass_email', models.CharField(blank=True, help_text='Enter your Vtpass Email here if you are using VTpass else leave blank', max_length=500, null=True)),
                ('vtpass_password', models.CharField(blank=True, help_text='Enter your Vtpass password here if you are using VTpass else leave blank', max_length=500, null=True)),
                ('hollatag_username', models.CharField(blank=True, help_text='Enter your hollatag username here if you are using hollatag else leave blank', max_length=500, null=True)),
                ('hollatag_password', models.CharField(blank=True, help_text='Enter your hollatag  password here if you are using hollatag else leave blank', max_length=500, null=True)),
                ('sme_plug_secret_key', models.CharField(blank=True, help_text='Enter your SMEPLUG SCRET API KEY here if you are using SMEplug else leave blank', max_length=500, null=True)),
                ('simhost_API_key', models.CharField(blank=True, help_text='Enter your simhost APIKEY here if you are using simhost else leave blank', max_length=500, null=True)),
                ('msplug_API_key', models.CharField(blank=True, help_text='Enter your msplug APIKEY here if you are using msplug else leave blank', max_length=500, null=True)),
                ('vtu_auto_email', models.CharField(blank=True, help_text='Enter your vtuauto Email here if you are using vtuauto else leave blank', max_length=500, null=True)),
                ('vtu_auto_password', models.CharField(blank=True, help_text='Enter your vtuauto Password here if you are using vtuauto else leave blank', max_length=500, null=True)),
                ('mobilenig_username', models.CharField(blank=True, help_text='Enter your mobilenig username here if you are using mobilenig else leave blank', max_length=500, null=True)),
                ('mobilenig_api_key', models.CharField(blank=True, help_text='Enter your mobilenig APIKEY here if you are using mobilenig else leave blank', max_length=500, null=True)),
                ('idchecker_api_key', models.CharField(blank=True, help_text='Enter your idchecker APIKEY here if you are using idchecker else leave blank', max_length=500, null=True)),
                ('uws_token', models.TextField(blank=True, null=True)),
                ('qtopup_api_key', models.CharField(blank=True, help_text='Enter your qtopup APIKEY here if you are using qtopup else leave blank', max_length=500, null=True)),
                ('msorg_web_url', models.URLField(blank=True, null=True)),
                ('msorg_web_api_key', models.TextField(blank=True, help_text='Enter your MSORG website APIKEY here if you are using website developed by MSORG else leave blank', max_length=500, null=True)),
                ('msorg_web_url_2', models.URLField(blank=True, null=True)),
                ('msorg_web_api_key_2', models.TextField(blank=True, help_text='Enter your APIKEY for your 2nd MSORG WEBSITE here if you are using website developed by MSORG else leave blank', max_length=500, null=True)),
                ('msorg_web_url_3', models.URLField(blank=True, null=True)),
                ('msorg_web_api_key_3', models.TextField(blank=True, help_text='Enter your APIKEY for your 3rd choice MSORG WEBSITE here if you are using website developed by MSORG else leave blank', max_length=500, null=True)),
                ('affiliate_upgrade_fee', models.IntegerField(blank=True, default=2000, null=True, verbose_name='Upgrade to Affiliate charge')),
                ('affiliate_to_topuser_upgrade_fee', models.IntegerField(blank=True, default=3000, null=True, verbose_name='Upgrade from Affiliate to TopUser charge')),
                ('topuser_upgrade_fee', models.IntegerField(blank=True, default=5000, null=True, verbose_name='Upgrade to TopUser charge')),
                ('affiliate_referral_bonus', models.IntegerField(blank=True, default=500, help_text='set amount upline/referee earns when downline/referral upgrades to Affiliate package', null=True)),
                ('affiliate_to_topuser_referral_bonus', models.IntegerField(blank=True, default=500, help_text='set amount upline/referee earns when downline/referral upgrades from Affiliate to TopUser package', null=True)),
                ('topuser_referral_bonus', models.IntegerField(blank=True, default=1000, help_text='set amount upline/referee earns when downline/referral upgrades to TopUser package', null=True)),
                ('ResultCheckerSource', models.CharField(blank=True, choices=[('API', 'API'), ('MANUAL', 'MANUAL')], default='API', max_length=50, null=True)),
                ('Cable_provider', models.CharField(blank=True, choices=[('VTPASS', 'VTPASS'), ('RINGO', 'RINGO')], default='VTPASS', max_length=50, null=True)),
                ('Bill_provider', models.CharField(blank=True, choices=[('VTPASS', 'VTPASS'), ('RINGO', 'RINGO')], default='VTPASS', max_length=50, null=True)),
                ('disable_Transaction_limit', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], default=False, max_length=50, verbose_name='Disable Transaction limit for unverified user')),
                ('unverified_users_daily_withdraws_limit', models.PositiveIntegerField(default=5000, help_text='maximum amount of withdrawal allowed for unverified users DAILY')),
                ('unverified_users_transfer_limit', models.PositiveIntegerField(default=5000, help_text='total amount of transfer allowed for unverified users DAILY')),
                ('unverified_users_daily_transation_limit', models.PositiveIntegerField(default=30000, help_text='total amount of transaction allowed for unverified users DAILY')),
            ],
            options={
                'verbose_name_plural': 'WEBSITE CONFIGURATIONS',
            },
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='BVN',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='local_gov_of_origin',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
    ]
